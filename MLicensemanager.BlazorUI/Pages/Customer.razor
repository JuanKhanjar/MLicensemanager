@page "/groups-with-products"

@using MLicensemanager.UseCases.CustomersUC.CustomerUCIntefaces;
@using MLicensemanager.UseCases.GroupsUC.GroupUCIntefaces;
@using MLicensemanager.BusinessCore.Extensions;
@using MLicensemanager.UseCases.ProductsUC.PorductsUCInterfaces;
@inject IJSRuntime JSRuntime

@inject IGetCustomerByIdAsyncUC _IGetCustomerByIdAsyncUC
@inject IGetGroupsWithProductsByCustomerIdUC _IGetGroupsWithProductsByCustomerIdUC

@inject IGetAllProductFromDbAsyncUC _IGetAllProductFromDbAsyncUC
@inject IGetProductsNotInListAsyncUC _IGetProductsNotInListAsyncUC
@inject IGetProductsForCustomerAndGroupAsyncUC _IGetProductsForCustomerAndGroupAsyncUC

<h3>Groups with Products</h3>
<div class="row">
    <!-- 1 Row  -->
    <div class="col-md-4">
        @if (_customer != null)
        {
            <div class="card card-deck">
                <div class="card-header">
                    Customer Information
                </div>
                <div class="card-body">
                    <h5 class="card-title">@_customer.CustomerName</h5>
                    <p class="card-text">Address: @_customer.Address</p>
                    <p class="card-text">Email: @_customer.Email</p>
                </div>
            </div>
        }
        else
        {
            <p>Customer not found.</p>
        }


        @if (groupsWithProducts != null && groupsWithProducts.Any())
        {
            <div class="card-text p-2">Count:( @groupsWithProducts.Count() ) / @groupsWithProducts.CalculateSubtotal().ToString("c") </div>
            <div class="card-deck">
                @foreach (var group in groupsWithProducts)
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <button class="btn btn-link" @onclick="() => ToggleGroupCollapse(group.GroupId)" aria-expanded="@(openGroup == group.GroupId)">
                                    Group Name: <span class="border-success rounded rounded-pill">@group.GroupName</span>
                                </button>
                            </h5>
                        </div>
                        <div class="@(openGroup == group.GroupId ? "collapse show" : "collapse")">
                            <div class="card-body">
                                <h5 class="card-title">Group ID: @group.GroupId</h5>
                                <h5 class="card-title">EAN: @group.EAN</h5>
                                <table class="table table-bordered mb-4">
                                    <thead>
                                        <tr>
                                            <th>Type</th>
                                            <th>Cost</th>
                                            <th>Remaining</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var groupProduct in group.GroupProducts)
                                        {
                                            <tr>
                                                <td>@groupProduct.Product.ProductName</td>
                                                <td>@groupProduct.Product.Price</td>
                                                <td>@groupProduct.Quantity</td>
                                            </tr>
                                            @*<tr class="table-borderless">
                                <td colspan="2">Total</td>
                                <td>@(groupProduct.Quantity * groupProduct.Product.Price)</td>
                                </tr>*@
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="2">Total</td>
                                            <td>@(group.CalculateTotalPrice())</td>
                                        </tr>
                                    </tfoot>
                                </table>
                                <div>
                                    <button class="btn btn-outline-primary" @onclick="() => OpenEditGroup(group.GroupId)">Edit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <!-- Total Price Card -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Total Price</h5>
                    <p class="card-text">Total Price for All Groups:</p>
                </div>
            </div>
        }
        else
        {
            <p>No customer groups available.</p>
        }
    </div>
    <!--End 1 Row  -->
    <!-- 2 Row  -->
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Details</h5>
                <!-- Edit Group Details -->
                @if (selectedGroupId != null)
                {
                    var selectedGroup = groupsWithProducts.FirstOrDefault(group => group.GroupId == selectedGroupId);

                    @if (selectedGroup != null)
                    {
                        <div class="card mt-4">
                            <div class="card-body ">
                                @*<h5 class="card-title">Group ID: @selectedGroup.GroupId</h5>*@
                                <div class="">
                                    <EditForm Model="selectedGroup">
                                        <div class="">
                                            <div class="card-body d-flex justify-content-between gap-1">
                                                <div class="form-group">
                                                    <h5 class="card-title d-inline-block">Group Name:</h5>
                                                    <InputText class="form-control d-inline-block" @bind-Value="selectedGroup.GroupName" />
                                                </div>
                                                <div class="form-group">
                                                    <h5 class="card-title d-inline-block">EAN:</h5>
                                                    <InputText class="form-control d-inline-block" @bind-Value="selectedGroup.EAN" disabled />
                                                </div>
                                                <button class="btn btn-outline-success  mt-4" @onclick="SaveChanges"><i class="fas fa-pen"></i></button>
                                                <button class="btn btn-outline-danger  mt-4" @onclick="SaveChanges"><i class="fas fa-trash"></i></button>
                                            </div>
                                        </div>
                                    </EditForm>
                                </div>
                                <div>
                                    <h5 class="card-title">Customer Products List</h5>
                                    <table id="customerProductsTable" class="table table-borderless mb-4">
                                        <thead>
                                            <tr>
                                                <th>Type</th>
                                                <th>Cost</th>
                                                <th>Remaining</th>
                                                <th>Quantity</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var productGroup in selectedGroup.GroupProducts)
                                            {
                                                <tr>
                                                    <td>@productGroup.Product.ProductName</td>
                                                    <td>@productGroup.Product.Price</td>
                                                    <td>@productGroup.Quantity</td>
                                                    <td>
                                                        <input type="number" min="0" class="border-2 p-2 border-primary rounded-pill text-center fw-bolder" />
                                                    </td>
                                                    <td>
                                                        <button class="btn btn-outline-danger"><i class="fas fa-minus"></i></button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr class="bg-light bg-opacity-75">
                                                <td colspan="4" class="border-light "><i class="fas fa-calculator"></i> <i class="fas fa-equals"></i></td>
                                                <td class=" text-end fw-bolder text-primary border-light">@(selectedGroup.CalculateTotalPrice().ToString("c"))</td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                                <div>
                                    <h5 class="card-title">Product not in Customer List</h5>
                                    <table id="allProductsTable" class="table table-bordered mb-4">
                                        <thead>
                                            <tr>
                                                <th>Type</th>
                                                <th>Cost</th>
                                                <th>Remaining</th>
                                                <th>Quantity</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var product in productNotInCustomerList)
                                            {
                                                <tr data-product-id="@product.ProductId">
                                                    <td>@product.ProductName</td>
                                                    <td>@product.Price</td>
                                                    <td>@QTY</td>
                                                    <td>
                                                        <input type="number" min="0" @bind-value=@QTY class="border-2 p-2 border-primary rounded-pill text-center fw-bolder" />
                                                    </td>
                                                    <td><button class="btn btn-success" @onclick="() => AddToCustomerProducts(product.ProductId)"><i class="fas fa-plus"></i></button></td>
                                                </tr>
                                            }
                                        </tbody>
                                        
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p>No group found with ID @selectedGroupId.</p>
                    }
                }
                <div class="d-flex justify-content-end mt-2">
                    <button class="btn btn-outline-secondary m-2 text-end "><i class="fas fa-reply"></i></button>
                    <button class="btn btn-outline-success m-2 text-end "><i class="fas fa-save"></i></button>

                </div>
            </div>
        </div>
       
    </div>
    <!--End 2 Row  -->
</div>

@code {
    private int QTY = 1;

    private int GroupId { get; set; }
    private MLicensemanager.BusinessCore.Entities.Customer? _customer;
    private List<Group> groupsWithProducts { get; set; } = new List<Group>();

    protected override async Task OnInitializedAsync()
    {
        int customerId = 1; // Replace with the actual customer ID
        _customer = await _IGetCustomerByIdAsyncUC.ExecuteAsync(customerId);
        if (_customer != null)
        {
            groupsWithProducts = await _IGetGroupsWithProductsByCustomerIdUC.ExecuteAsync(_customer.CustomerId);
        }

    }

    #region Handle Open Toggle
    private int openGroup = -1;

    private void ToggleGroupCollapse(int GroupId)
    {
        if (openGroup == GroupId)
        {
            openGroup = -1;
        }
        else
        {
            openGroup = GroupId;
        }
    }
    #endregion

    private List<Product> productsfromDb = new List<Product>();
    private List<Product> productForSpesificCustomeGroup = new List<Product>();
    private List<Product> productNotInCustomerList = new List<Product>();


    #region Details
    public int? selectedGroupId { get; set; }

    private async void OpenEditGroup(int groupId)
    {
        selectedGroupId = groupId;
        productsfromDb = await _IGetAllProductFromDbAsyncUC.ExecuteAsync();
        productForSpesificCustomeGroup = await _IGetProductsForCustomerAndGroupAsyncUC.ExecuteAsync(1, groupId);
        productNotInCustomerList = await _IGetProductsNotInListAsyncUC.ExecuteAsync(productForSpesificCustomeGroup, productsfromDb);
    }

    private async Task SaveChanges()
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirmSaveChanges");

        if (confirmed)
        {
            //await ProductService.UpdateGroupNameForCustomerAndGroupAsync(selectedGroup.CustomerId, selectedGroup.GroupId, selectedGroup.GroupName);
            // Optionally show a success message here
        }
        else
        {
            // Optionally show a cancellation message or perform other actions
        }
    }
    #endregion

    private void AddToCustomerProducts(int productId)
    {
        JSRuntime.InvokeVoidAsync("addProductToCustomerTable", productId);
    }


}
