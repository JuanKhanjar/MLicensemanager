@page "/"
@*@using MLicensemanager.BusinessCore;
@using MLicensemanager.UseCases.CustomerUCases.UCIntefaces;
@inject IGetCustomerWithGroupsAndLicensesUC _IGetCustomerWithGroupsAndLicensesUC
@inject IJSRuntime JSRuntime*@

<PageTitle>Index</PageTitle>

<SurveyPrompt Title="How is Blazor working for you?" />
@*

@if (customer != null)
{
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Customer Information</h5>
            <p class="card-text">Name: @customer.Title</p>
        </div>
    </div>

    <h4 class="mt-2 p-2">Groups: (@customer.CustomersGroups.Count() ) </h4>
    <div class="mt-3">
        <h4>Total Price for All Groups:</h4>
        <p class="fw-bolder text-success font-monospace p-1">@customer.CustomersGroups.Sum(cg => cg.GroupProducts.Sum(gp => gp.Product.Price)).ToString("c")</p>
   </div>
    @foreach (var group in customer.CustomersGroups)
    {
        <div class="card mt-3">
            <div class="card-header" role="button" @onclick="() => ToggleCollapse(group.GroupID)">
                <span class="arrow-down text-right" id="arrow-@group.GroupID"></span>
                <h5 class="mb-0 fw-bolder text-primary">EAN: @group.EAN - Group name: @group.GroupName</h5>
                <button class="btn btn-primary btn-sm">Edit</button>
            </div>
            <div id="group-@group.GroupID" class="collapse">
                <div class="card-body">

                    <div class="card mt-3">
                        <div class="card-body">
                            <h5 class="card-title">EAN: @group.Group.EAN</h5>
                           <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Type</th>
                                        <th>Cost</th>
                                        <th>Quantity</th>
                                        <th>Summary</th>
                                        <th>Add</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    
                                    @foreach (var productGroup in group.GroupProducts.GroupBy(gp => gp.Product.ProductName))
                                    {
                                        var product = productGroup.First().Product;
                                        var quantity = productGroup.Count();
                                        var totalPrice = productGroup.Sum(gp => gp.Product.Price);

                                        <tr>
                                            <td>@product.ProductName</td>
                                            <td>@product.Price.ToString("c")</td>
                                            <td>@quantity</td>
                                            <td>@totalPrice.ToString("c")</td>
                                            <td>
                                                <input type="number"/>
                                            </td>
                                        </tr>
                                    }
                                    <tr style="background-color:#FFFAFA;">
                                        <td colspan="3" class="text-dark fw-bold">Total Group Price:</td>
                                        <td class="text-success font-monospace fw-bolder">@group.GroupProducts.Sum(gp => gp.Product.Price).ToString("c")</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }

    <div class="mt-3">
        <h4>Total Price for All Groups:</h4>
        <p class="fw-bolder font-monospace p-1">@customer.CustomersGroups.Sum(cg => cg.Group.GroupProducts.Sum(gp => gp.Product.Price)).ToString("c")</p>
    </div>
}
else
{
    <p>Loading...</p>
}



@code {

    [Parameter]
    public int CustomerId { get; set; } = 1;

    private Customer customer { get; set; } = new Customer();

    protected override async Task OnInitializedAsync()
    {
        customer = await _IGetCustomerWithGroupsAndLicensesUC.ExecuteAsync(CustomerId);
    }

    private async Task ToggleCollapse(int groupId)
    {
        await JSRuntime.InvokeVoidAsync("toggleCollapses", groupId);
    }
}

*@
