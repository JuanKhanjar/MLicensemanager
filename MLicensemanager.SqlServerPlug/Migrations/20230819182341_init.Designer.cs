// <auto-generated />
using MLicensemanager.SqlServerPlug.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MLicensemanager.SqlServerPlug.Migrations
{
    [DbContext(typeof(LMSDbContext))]
    [Migration("20230819182341_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("RegularExpression", "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "123 Main St",
                            CustomerName = "Vejle Kommune",
                            Email = "vejle@example.com"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "456 Elm St",
                            CustomerName = "Vejen",
                            Email = "Vejen@example.com"
                        });
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("EAN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GroupId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            CustomerId = 1,
                            EAN = "EAN123",
                            GroupName = "Sundhed"
                        },
                        new
                        {
                            GroupId = 2,
                            CustomerId = 1,
                            EAN = "EAN456",
                            GroupName = "Borgerservice"
                        },
                        new
                        {
                            GroupId = 3,
                            CustomerId = 1,
                            EAN = "EAN567",
                            GroupName = "Raadhus"
                        },
                        new
                        {
                            GroupId = 4,
                            CustomerId = 2,
                            EAN = "EAN789",
                            GroupName = "Sundhed"
                        });
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.GroupProduct", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("GroupId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("GroupProducts");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            ProductId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            GroupId = 1,
                            ProductId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            GroupId = 2,
                            ProductId = 1,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 10.99m,
                            ProductName = "Miralix Desktop 330"
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 20.99m,
                            ProductName = "Miralix Go 1.7"
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 21.99m,
                            ProductName = "Miralix Go 1.8"
                        });
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.Group", b =>
                {
                    b.HasOne("MLicensemanager.BusinessCore.Entities.Customer", "Customer")
                        .WithMany("Groups")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.GroupProduct", b =>
                {
                    b.HasOne("MLicensemanager.BusinessCore.Entities.Group", "Group")
                        .WithMany("GroupProducts")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MLicensemanager.BusinessCore.Entities.Product", "Product")
                        .WithMany("GroupProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.Customer", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.Group", b =>
                {
                    b.Navigation("GroupProducts");
                });

            modelBuilder.Entity("MLicensemanager.BusinessCore.Entities.Product", b =>
                {
                    b.Navigation("GroupProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
